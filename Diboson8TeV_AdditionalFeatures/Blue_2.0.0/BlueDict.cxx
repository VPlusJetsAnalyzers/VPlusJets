//
// File generated by rootcint at Tue Nov 18 18:21:19 2014

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME BlueDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "BlueDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// START OF SHADOWS

namespace ROOT {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOT
// END OF SHADOWS

namespace ROOT {
   void Blue_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_Blue(void *p);
   static void deleteArray_Blue(void *p);
   static void destruct_Blue(void *p);
   static void streamer_Blue(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static TGenericClassInfo *GenerateInitInstanceLocal(const ::Blue*)
   {
      ::Blue *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::Blue >(0);
      static ::ROOT::TGenericClassInfo 
         instance("Blue", ::Blue::Class_Version(), "./Blue.h", 25,
                  typeid(::Blue), DefineBehavior(ptr, ptr),
                  &::Blue::Dictionary, isa_proxy, 0,
                  sizeof(::Blue) );
      instance.SetDelete(&delete_Blue);
      instance.SetDeleteArray(&deleteArray_Blue);
      instance.SetDestructor(&destruct_Blue);
      instance.SetStreamerFunc(&streamer_Blue);
      return &instance;
   }
   TGenericClassInfo *GenerateInitInstance(const ::Blue*)
   {
      return GenerateInitInstanceLocal((::Blue*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::Blue*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOT

//______________________________________________________________________________
TClass *Blue::fgIsA = 0;  // static to hold class pointer

//______________________________________________________________________________
const char *Blue::Class_Name()
{
   return "Blue";
}

//______________________________________________________________________________
const char *Blue::ImplFileName()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Blue*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int Blue::ImplFileLine()
{
   return ::ROOT::GenerateInitInstanceLocal((const ::Blue*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void Blue::Dictionary()
{
   fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Blue*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *Blue::Class()
{
   if (!fgIsA) fgIsA = ::ROOT::GenerateInitInstanceLocal((const ::Blue*)0x0)->GetClass();
   return fgIsA;
}

//______________________________________________________________________________
void Blue::Streamer(TBuffer &R__b)
{
   // Stream an object of class Blue.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void Blue::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class Blue.
      TClass *R__cl = ::Blue::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Versio", &Versio);
      R__insp.InspectMember(Versio, "Versio.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Date", &Date);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "Today", &Today);
      R__insp.InspectMember(Today, "Today.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Months", &Months);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InpEst", &InpEst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InpUnc", &InpUnc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InpObs", &InpObs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EstNam", &EstNam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UncNam", &UncNam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ObsNam", &ObsNam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EstAct", &EstAct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UncAct", &UncAct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ObsAct", &ObsAct);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EstFil", &EstFil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UncFil", &UncFil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FlaFac", &FlaFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InrFac", &InrFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InpFac", &InpFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MatFac", &MatFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ActFac", &ActFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MinFac", &MinFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MaxFac", &MaxFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ValSca", &ValSca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SigSca", &SigSca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VtoSca", &VtoSca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StoSca", &StoSca);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "FaiFac", &FaiFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UncCha", &UncCha);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UncFac", &UncFac);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UncRed", &UncRed);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UncRel", &UncRel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsFillEstNam", &IsFillEstNam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsFillUncNam", &IsFillUncNam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsFillObsNam", &IsFillObsNam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EstObs", &EstObs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LisEst", &LisEst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LisUnc", &LisUnc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LisObs", &LisObs);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InpFil", &InpFil);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InpFix", &InpFix);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsCalcParams", &IsCalcParams);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsSolve", &IsSolve);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsSolveRelUnc", &IsSolveRelUnc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsSolveAccImp", &IsSolveAccImp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsSolveScaRho", &IsSolveScaRho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsSolveInfWei", &IsSolveInfWei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsSolvePosWei", &IsSolvePosWei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsSolveMaxVar", &IsSolveMaxVar);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsRelUncMode", &IsRelUncMode);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Cof", &Cof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "PreAcc", &PreAcc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IntAcc", &IntAcc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LisImp", &LisImp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LasImp", &LasImp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*IndImp", &IndImp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ValImp", &ValImp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UncImp", &UncImp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*StaImp", &StaImp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SysImp", &SysImp);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Indx", &Indx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Colo", &Colo);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Name", &Name);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Valu", &Valu);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Stat", &Stat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Syst", &Syst);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Full", &Full);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VarMax", &VarMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VarMin", &VarMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RhoMax", &RhoMax);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RhoMin", &RhoMin);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RhoOoz", &RhoOoz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "RhoFco", &RhoFco);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RhoFpk", &RhoFpk);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RhoFij", &RhoFij);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IFuCor", &IFuCor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IFuFla", &IFuFla);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*IFuFai", &IFuFai);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IPrint", &IPrint);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IQuiet", &IQuiet);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InpEstOrig", &InpEstOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InpUncOrig", &InpUncOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "InpObsOrig", &InpObsOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*XvaOrig", &XvaOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SigOrig", &SigOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UncOrig", &UncOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CorOrig", &CorOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UmaOrig", &UmaOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UtrOrig", &UtrOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*EstNamOrig", &EstNamOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*UncNamOrig", &UncNamOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ObsNamOrig", &ObsNamOrig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Xva", &Xva);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Sig", &Sig);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Unc", &Unc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Cor", &Cor);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Cov", &Cov);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CovI", &CovI);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Rho", &Rho);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Lam", &Lam);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Pul", &Pul);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Uma", &Uma);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Utr", &Utr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*XvaRes", &XvaRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CorRes", &CorRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*CovRes", &CovRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*RhoRes", &RhoRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChiQua", &ChiQua);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ChiPro", &ChiPro);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NumDof", &NumDof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*VarInd", &VarInd);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*IntWei", &IntWei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*MarWei", &MarWei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*BluWei", &BluWei);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*SRat", &SRat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Beta", &Beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*Sigx", &Sigx);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DBdr", &DBdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DSdr", &DSdr);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DBdz", &DBdz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*DSdz", &DSdz);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*IndRel", &IndRel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "NotRel", &NotRel);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ChiRes", &ChiRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*LikRes", &LikRes);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "LikFla", &LikFla);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "IsInspectLike", &IsInspectLike);
      TObject::ShowMembers(R__insp);
}

namespace ROOT {
   // Wrapper around operator delete
   static void delete_Blue(void *p) {
      delete ((::Blue*)p);
   }
   static void deleteArray_Blue(void *p) {
      delete [] ((::Blue*)p);
   }
   static void destruct_Blue(void *p) {
      typedef ::Blue current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_Blue(TBuffer &buf, void *obj) {
      ((::Blue*)obj)->::Blue::Streamer(buf);
   }
} // end of namespace ROOT for class ::Blue

/********************************************************
* BlueDict.cxx
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtableBlueDict();

extern "C" void G__set_cpp_environmentBlueDict() {
  G__add_compiledheader("TObject.h");
  G__add_compiledheader("TMemberInspector.h");
  G__add_compiledheader("Blue.h");
  G__cpp_reset_tagtableBlueDict();
}
#include <new>
extern "C" int G__cpp_dllrevBlueDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* Blue */
static int G__BlueDict_242_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Blue* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Blue((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
   } else {
     p = new((void*) gvp) Blue((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BlueDictLN_Blue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Blue* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 4
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Blue(
(const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t*) G__int(libp->para[3]));
   } else {
     p = new((void*) gvp) Blue(
(const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t*) G__int(libp->para[3]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BlueDictLN_Blue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Blue* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 3
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Blue(
(const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t*) G__int(libp->para[2]));
   } else {
     p = new((void*) gvp) Blue(
(const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t*) G__int(libp->para[2]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BlueDictLN_Blue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Blue* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 5
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new Blue(
(const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t*) G__int(libp->para[3])
, (const Int_t*) G__int(libp->para[4]));
   } else {
     p = new((void*) gvp) Blue(
(const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), (const Int_t*) G__int(libp->para[3])
, (const Int_t*) G__int(libp->para[4]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BlueDictLN_Blue));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->FixInp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->ReleaseInp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->ResetInp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->Solve();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SolveRelUnc((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SolveAccImp((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SolveAccImp((const Int_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SolveScaRho();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SolveScaRho((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SolveScaRho((const Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SolveInfWei();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SolvePosWei();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SolveMaxVar((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->FillEst((const Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->FillCor((const Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->FillCor((const Int_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->FillNamEst((TString*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->FillNamUnc((TString*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->FillNamObs((TString*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetActEst());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetActEst((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetActUnc());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetActObs());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const Blue*) G__getstructoffset())->GetNamEst((const Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const Blue*) G__getstructoffset())->GetNamUnc((const Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_30(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const TString* pobj;
         const TString xobj = ((const Blue*) G__getstructoffset())->GetNamObs((const Int_t) G__int(libp->para[0]));
         pobj = new TString(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_31(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetIndEst((Int_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_32(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetIndUnc((Int_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_33(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetIndObs((Int_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_34(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetPreEst((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_35(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetCov((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_36(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetCov((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_37(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetCovInvert((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_38(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetCovInvert((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_39(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetRho((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_40(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetRho((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_41(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetEst((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_42(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetEst((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_43(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetEstVal((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_44(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetEstVal((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_45(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetEstUnc((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_46(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetEstUnc((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_47(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetParams((const Int_t) G__int(libp->para[0]), (TMatrixD*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_48(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetParams((const Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_49(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Blue*) G__getstructoffset())->GetChiq());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_50(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetNdof());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_51(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Blue*) G__getstructoffset())->GetProb());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_52(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Blue*) G__getstructoffset())->GetPull((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_53(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetCovRes((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_54(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetCovRes((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_55(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetRhoRes((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_56(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetRhoRes((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_57(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetWeight((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_58(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetWeight((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_59(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetResult((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_60(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetResult((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_61(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetUncert((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_62(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetUncert((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_63(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetInspectLike((TMatrixD*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_64(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetInspectLike((Double_t*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_65(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetAccImpLasEst((const Int_t) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_66(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetAccImpIndEst((const Int_t) G__int(libp->para[0]), (Int_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_67(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetNumScaFac());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_68(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetNumScaRho());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_69(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetScaVal((const Int_t) G__int(libp->para[0]), (TMatrixD*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_70(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetScaVal((const Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_71(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetScaUnc((const Int_t) G__int(libp->para[0]), (TMatrixD*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_72(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->GetScaUnc((const Int_t) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_73(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetActiveEst((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_74(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetActiveUnc((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_75(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetInActiveEst((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_76(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetInActiveUnc((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_77(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRhoValUnc((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_78(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRhoValUnc((const Int_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_79(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRhoValUnc((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_80(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetNotRhoValUnc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_81(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetNotRhoValUnc((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_82(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRhoFacUnc((const Double_t) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_83(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRhoFacUnc((const Int_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_84(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRhoFacUnc((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Double_t) G__double(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_85(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetNotRhoFacUnc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_86(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetNotRhoFacUnc((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_87(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRhoRedUnc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_88(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRhoRedUnc((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_89(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetNotRhoRedUnc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_90(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetNotRhoRedUnc((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_91(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRelUnc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_92(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRelUnc((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_93(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetRelUnc((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (Double_t*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_94(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetNotRelUnc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_95(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetNotRelUnc((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_96(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetPrintLevel((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_97(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetQuiet();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_98(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->SetNotQuiet();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_99(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintMatrix((TMatrixD*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_100(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintMatrix((TMatrixD*) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_101(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintMatrix((TMatrixD*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_102(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintMatrix((TMatrixD*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), *((const TString*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_103(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintDouble((Double_t*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_104(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintDouble((Double_t*) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, (const Int_t) G__int(libp->para[2]), *((const TString*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_105(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintListEst();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_106(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintListUnc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_107(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintNamEst();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_108(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintNamUnc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_109(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintEst((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_110(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintEst();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_111(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCofRelUnc((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_112(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCofRelUnc();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_113(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCor((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_114(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCor();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_115(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCov((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_116(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCov();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_117(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCovInvert();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_118(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintRho();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_119(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCompatEst(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_120(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCompatEst();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_121(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintParams((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_122(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintParams();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_123(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintPull((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_124(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintPull();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_125(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintListObs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_126(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintNamObs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_127(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCovRes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_128(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintRhoRes();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_129(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintWeight();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_130(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintResult();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_131(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintCompatObs();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_132(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintChiPro();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_133(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintInspectLike();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_134(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintAccImp();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_135(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintScaRho(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_136(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintScaRho();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_137(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintInfWei();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_138(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintMaxVar();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_139(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->PrintStatus();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_140(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Blue*) G__getstructoffset())->GetPara((const Int_t) G__int(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_141(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const Blue*) G__getstructoffset())->FunPara((Double_t*) G__int(libp->para[0]), (Double_t*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_142(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->InspectPair((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_143(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->InspectPair((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, *((const TString*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_144(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->InspectPair((const Int_t) G__int(libp->para[0]), (const Int_t) G__int(libp->para[1])
, *((const TString*) G__int(libp->para[2])), (const Int_t) G__int(libp->para[3]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_145(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->DrawSens((const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3])
, (const Double_t) G__double(libp->para[4]), *((const TString*) G__int(libp->para[5])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_146(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->DrawSens(
(const Double_t) G__double(libp->para[0]), (const Double_t) G__double(libp->para[1])
, (const Double_t) G__double(libp->para[2]), (const Double_t) G__double(libp->para[3])
, (const Double_t) G__double(libp->para[4]), *((const TString*) G__int(libp->para[5]))
, (const Int_t) G__int(libp->para[6]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_147(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->InspectLike((const Int_t) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_148(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->InspectLike((const Int_t) G__int(libp->para[0]), *((TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_149(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const Blue*) G__getstructoffset())->InspectResult());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_150(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->LatexResult(*((const TString*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_151(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->LatexResult(*((const TString*) G__int(libp->para[0])), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])), *((const TString*) G__int(libp->para[3]))
, *((const TString*) G__int(libp->para[4])), *((const TString*) G__int(libp->para[5])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_152(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->DisplayResult((const Int_t) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_153(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->DisplayResult((const Int_t) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])), *((const TString*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_154(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->DisplayAccImp((const Int_t) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_155(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((const Blue*) G__getstructoffset())->DisplayAccImp((const Int_t) G__int(libp->para[0]), *((const TString*) G__int(libp->para[1]))
, *((const TString*) G__int(libp->para[2])), *((const TString*) G__int(libp->para[3])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_239(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) Blue::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_240(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Blue::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_241(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) Blue::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_242(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      Blue::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_246(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((Blue*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_247(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Blue::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_248(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Blue::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_249(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) Blue::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__BlueDict_242_0_250(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) Blue::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__BlueDict_242_0_251(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   Blue* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new Blue(*(Blue*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__BlueDictLN_Blue));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef Blue G__TBlue;
static int G__BlueDict_242_0_252(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (Blue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((Blue*) (soff+(sizeof(Blue)*i)))->~G__TBlue();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (Blue*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((Blue*) (soff))->~G__TBlue();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__BlueDict_242_0_253(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   Blue* dest = (Blue*) G__getstructoffset();
   *dest = *(Blue*) libp->para[0].ref;
   const Blue& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* Blue */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncBlueDict {
 public:
  G__Sizep2memfuncBlueDict(): p(&G__Sizep2memfuncBlueDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncBlueDict::*p)();
};

size_t G__get_sizep2memfuncBlueDict()
{
  G__Sizep2memfuncBlueDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritanceBlueDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__BlueDictLN_Blue))) {
     Blue *G__Lderived;
     G__Lderived=(Blue*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__BlueDictLN_Blue),G__get_linked_tagnum(&G__BlueDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetableBlueDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Double_t",100,-1,0,-1);
   G__setnewtype(-1,"Double 8 bytes",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__BlueDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BlueDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BlueDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BlueDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BlueDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__BlueDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__BlueDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BlueDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__BlueDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__BlueDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixD",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTColumn_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTFlat_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTSub_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTSparseRow_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTSparseDiag_constlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTColumnlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTFlatlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTSublEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTSparseRowlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTSparseDiaglEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TElementActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TElementPosActionTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSym<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTSymlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparse<Double_t>",117,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTSparselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* Blue */
static void G__setup_memvarBlue(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__BlueDictLN_Blue));
   { Blue *p; p=(Blue*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BlueDictLN_TString),-1,-1,4,"Versio=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TDatime),-1,-1,4,"Date=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__BlueDictLN_TString),-1,-1,4,"Today=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TString),-1,-1,4,"Months=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"InpEst=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"InpUnc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"InpObs=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TString),-1,-1,4,"EstNam=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TString),-1,-1,4,"UncNam=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TString),-1,-1,4,"ObsNam=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"EstAct=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"UncAct=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"ObsAct=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"EstFil=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"UncFil=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"FlaFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"InrFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"InpFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"MatFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"ActFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"MinFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"MaxFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"ValSca=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"SigSca=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"VtoSca=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,2,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"StoSca=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"FaiFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"UncCha=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"UncFac=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"UncRed=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"UncRel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsFillEstNam=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsFillUncNam=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsFillObsNam=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"EstObs=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"LisEst=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"LisUnc=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"LisObs=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"InpFil=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"InpFix=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsCalcParams=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsSolve=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsSolveRelUnc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsSolveAccImp=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsSolveScaRho=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsSolveInfWei=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsSolvePosWei=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsSolveMaxVar=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsRelUncMode=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"MaxCof=3LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"Cof=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"PreAcc=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IntAcc=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"LisImp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"LasImp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"IndImp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"ValImp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"UncImp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"StaImp=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"SysImp=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"Indx=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"Colo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TString),-1,-1,4,"Name=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Valu=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Stat=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Syst=",0,(char*)NULL);
   G__memvar_setup((void*)0,68,0,0,-1,G__defined_typename("Double_t"),-1,4,"Full=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"VarMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"VarMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"RhoMax=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"RhoMin=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"RhoOoz=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"RhoFco=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"RhoFpk=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"RhoFij=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IFuCor=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IFuFla=",0,(char*)NULL);
   G__memvar_setup((void*)0,73,0,0,-1,G__defined_typename("Int_t"),-1,4,"IFuFai=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IPrint=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IQuiet=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"InpEstOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"InpUncOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"InpObsOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"XvaOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"SigOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"UncOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"CorOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"UmaOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"UtrOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TString),-1,-1,4,"EstNamOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TString),-1,-1,4,"UncNamOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TString),-1,-1,4,"ObsNamOrig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"Xva=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"Sig=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"Unc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"Cor=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"Cov=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"CovI=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"Rho=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"Lam=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"Pul=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"Uma=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"Utr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"XvaRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"CorRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"CovRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"RhoRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ChiQua=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,G__defined_typename("Double_t"),-1,4,"ChiPro=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NumDof=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"VarInd=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"IntWei=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"MarWei=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TVectorTlEdoublegR),G__defined_typename("TVectorD"),-1,4,"BluWei=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"SRat=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"Beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"Sigx=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"DBdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"DSdr=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"DBdz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"DSdz=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"IndRel=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"NotRel=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"ChiRes=",0,(char*)NULL);
   G__memvar_setup((void*)G__PVOID,105,0,1,-1,G__defined_typename("Int_t"),-2,4,"LikDim=7LL",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TMatrixTlEdoublegR),G__defined_typename("TMatrixD"),-1,4,"LikRes=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"LikFla=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,4,"IsInspectLike=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__BlueDictLN_TClass),-1,-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarBlueDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncBlue(void) {
   /* Blue */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__BlueDictLN_Blue));
   G__memfunc_setup("Blue",392,G__BlueDict_242_0_1, 105, G__get_linked_tagnum(&G__BlueDictLN_Blue), -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - NumEst i - 'Int_t' 10 - NumUnc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Blue",392,G__BlueDict_242_0_2, 105, G__get_linked_tagnum(&G__BlueDictLN_Blue), -1, 0, 4, 1, 1, 0, 
"i - 'Int_t' 10 - NumEst i - 'Int_t' 10 - NumUnc "
"i - 'Int_t' 10 - NumObs I - 'Int_t' 10 - IntObs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Blue",392,G__BlueDict_242_0_3, 105, G__get_linked_tagnum(&G__BlueDictLN_Blue), -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 10 - NumEst i - 'Int_t' 10 - NumUnc "
"I - 'Int_t' 10 - IntFac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Blue",392,G__BlueDict_242_0_4, 105, G__get_linked_tagnum(&G__BlueDictLN_Blue), -1, 0, 5, 1, 1, 0, 
"i - 'Int_t' 10 - NumEst i - 'Int_t' 10 - NumUnc "
"i - 'Int_t' 10 - NumObs I - 'Int_t' 10 - IntObs "
"I - 'Int_t' 10 - IntFac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FixInp",590,G__BlueDict_242_0_5, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ReleaseInp",1000,G__BlueDict_242_0_6, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetInp",810,G__BlueDict_242_0_7, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Solve",521,G__BlueDict_242_0_8, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveRelUnc",1106,G__BlueDict_242_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - Dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveAccImp",1078,G__BlueDict_242_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - Dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveAccImp",1078,G__BlueDict_242_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - ImpFla d - 'Double_t' 10 - Dx", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveScaRho",1097,G__BlueDict_242_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveScaRho",1097,G__BlueDict_242_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - RhoFla", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveScaRho",1097,G__BlueDict_242_0_14, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 10 - RhoFla D - 'Double_t' 10 - MinRho "
"D - 'Double_t' 10 - MaxRho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveInfWei",1099,G__BlueDict_242_0_15, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolvePosWei",1120,G__BlueDict_242_0_16, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveMaxVar",1112,G__BlueDict_242_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - IFuRho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillEst",691,G__BlueDict_242_0_18, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - i D - 'Double_t' 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillCor",683,G__BlueDict_242_0_19, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - k D - 'Double_t' 10 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillCor",683,G__BlueDict_242_0_20, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - k d - 'Double_t' 10 - rho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillNamEst",975,G__BlueDict_242_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TString' - 10 - NamEst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillNamUnc",969,G__BlueDict_242_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TString' - 10 - NamUnc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillNamObs",967,G__BlueDict_242_0_23, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TString' - 10 - NamObs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActEst",868,G__BlueDict_242_0_24, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActEst",868,G__BlueDict_242_0_25, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActUnc",862,G__BlueDict_242_0_26, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetActObs",860,G__BlueDict_242_0_27, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNamEst",872,G__BlueDict_242_0_28, 117, G__get_linked_tagnum(&G__BlueDictLN_TString), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNamUnc",866,G__BlueDict_242_0_29, 117, G__get_linked_tagnum(&G__BlueDictLN_TString), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNamObs",864,G__BlueDict_242_0_30, 117, G__get_linked_tagnum(&G__BlueDictLN_TString), -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndEst",871,G__BlueDict_242_0_31, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "I - 'Int_t' 0 - IndEst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndUnc",865,G__BlueDict_242_0_32, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "I - 'Int_t' 0 - IndUnc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetIndObs",863,G__BlueDict_242_0_33, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "I - 'Int_t' 0 - IndObs", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPreEst",883,G__BlueDict_242_0_34, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCov",584,G__BlueDict_242_0_35, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseCov", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCov",584,G__BlueDict_242_0_36, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetCov", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCovInvert",1216,G__BlueDict_242_0_37, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseCovI", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCovInvert",1216,G__BlueDict_242_0_38, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetCovI", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRho",585,G__BlueDict_242_0_39, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseRho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRho",585,G__BlueDict_242_0_40, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetRho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEst",588,G__BlueDict_242_0_41, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseEst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEst",588,G__BlueDict_242_0_42, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetEst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstVal",879,G__BlueDict_242_0_43, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseEstVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstVal",879,G__BlueDict_242_0_44, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetEstVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstUnc",882,G__BlueDict_242_0_45, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseEstUnc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetEstUnc",882,G__BlueDict_242_0_46, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetEstUnc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParams",900,G__BlueDict_242_0_47, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - Ifl U 'TMatrixT<double>' 'TMatrixD' 0 - UseParams", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetParams",900,G__BlueDict_242_0_48, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - Ifl D - 'Double_t' 0 - RetParams", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetChiq",677,G__BlueDict_242_0_49, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNdof",679,G__BlueDict_242_0_50, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetProb",691,G__BlueDict_242_0_51, 100, -1, G__defined_typename("Double_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPull",701,G__BlueDict_242_0_52, 100, -1, G__defined_typename("Double_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCovRes",882,G__BlueDict_242_0_53, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseCovRes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetCovRes",882,G__BlueDict_242_0_54, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetCovRes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRhoRes",883,G__BlueDict_242_0_55, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseRhoRes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetRhoRes",883,G__BlueDict_242_0_56, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetRhoRes", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeight",904,G__BlueDict_242_0_57, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetWeight",904,G__BlueDict_242_0_58, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetWeight", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResult",927,G__BlueDict_242_0_59, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseResult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetResult",927,G__BlueDict_242_0_60, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetResult", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUncert",913,G__BlueDict_242_0_61, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseUncert", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetUncert",913,G__BlueDict_242_0_62, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetUncert", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInspectLike",1403,G__BlueDict_242_0_63, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 0 - UseInsLik", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetInspectLike",1403,G__BlueDict_242_0_64, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "D - 'Double_t' 0 - RetInsLik", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAccImpLasEst",1433,G__BlueDict_242_0_65, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 1, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetAccImpIndEst",1428,G__BlueDict_242_0_66, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - n I - 'Int_t' 0 - IndEst", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumScaFac",1137,G__BlueDict_242_0_67, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetNumScaRho",1168,G__BlueDict_242_0_68, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScaVal",858,G__BlueDict_242_0_69, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - n U 'TMatrixT<double>' 'TMatrixD' 0 - UseScaVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScaVal",858,G__BlueDict_242_0_70, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - n D - 'Double_t' 0 - RetScaVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScaUnc",861,G__BlueDict_242_0_71, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - n U 'TMatrixT<double>' 'TMatrixD' 0 - UseScaUnc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetScaUnc",861,G__BlueDict_242_0_72, 105, -1, G__defined_typename("Int_t"), 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - n D - 'Double_t' 0 - RetScaUnc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActiveEst",1204,G__BlueDict_242_0_73, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActiveUnc",1198,G__BlueDict_242_0_74, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInActiveEst",1387,G__BlueDict_242_0_75, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetInActiveUnc",1381,G__BlueDict_242_0_76, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoValUnc",1182,G__BlueDict_242_0_77, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - RhoVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoValUnc",1182,G__BlueDict_242_0_78, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - k d - 'Double_t' 10 - RhoVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoValUnc",1182,G__BlueDict_242_0_79, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 10 - k i - 'Int_t' 10 - l "
"d - 'Double_t' 10 - RhoVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNotRhoValUnc",1487,G__BlueDict_242_0_80, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNotRhoValUnc",1487,G__BlueDict_242_0_81, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoFacUnc",1157,G__BlueDict_242_0_82, 121, -1, -1, 0, 1, 1, 1, 0, "d - 'Double_t' 10 - RhoFac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoFacUnc",1157,G__BlueDict_242_0_83, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - k d - 'Double_t' 10 - RhoFac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoFacUnc",1157,G__BlueDict_242_0_84, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 10 - k i - 'Int_t' 10 - l "
"d - 'Double_t' 10 - RhoFac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNotRhoFacUnc",1462,G__BlueDict_242_0_85, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNotRhoFacUnc",1462,G__BlueDict_242_0_86, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoRedUnc",1174,G__BlueDict_242_0_87, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoRedUnc",1174,G__BlueDict_242_0_88, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNotRhoRedUnc",1479,G__BlueDict_242_0_89, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNotRhoRedUnc",1479,G__BlueDict_242_0_90, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRelUnc",885,G__BlueDict_242_0_91, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRelUnc",885,G__BlueDict_242_0_92, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRelUnc",885,G__BlueDict_242_0_93, 121, -1, -1, 0, 3, 1, 1, 0, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - k "
"D - 'Double_t' 10 - ActCof", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNotRelUnc",1190,G__BlueDict_242_0_94, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNotRelUnc",1190,G__BlueDict_242_0_95, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetPrintLevel",1329,G__BlueDict_242_0_96, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQuiet",820,G__BlueDict_242_0_97, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetNotQuiet",1125,G__BlueDict_242_0_98, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMatrix",1154,G__BlueDict_242_0_99, 121, -1, -1, 0, 1, 1, 1, 8, "U 'TMatrixT<double>' 'TMatrixD' 10 - TryMat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMatrix",1154,G__BlueDict_242_0_100, 121, -1, -1, 0, 2, 1, 1, 8, 
"U 'TMatrixT<double>' 'TMatrixD' 10 - TryMat u 'TString' - 10 - ForVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMatrix",1154,G__BlueDict_242_0_101, 121, -1, -1, 0, 3, 1, 1, 8, 
"U 'TMatrixT<double>' 'TMatrixD' 10 - TryMat i - 'Int_t' 10 - NumRow "
"i - 'Int_t' 10 - NumCol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMatrix",1154,G__BlueDict_242_0_102, 121, -1, -1, 0, 4, 1, 1, 8, 
"U 'TMatrixT<double>' 'TMatrixD' 10 - TryMat i - 'Int_t' 10 - NumRow "
"i - 'Int_t' 10 - NumCol u 'TString' - 10 - ForVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDouble",1128,G__BlueDict_242_0_103, 121, -1, -1, 0, 3, 1, 1, 8, 
"D - 'Double_t' 10 - TryDou i - 'Int_t' 10 - NumRow "
"i - 'Int_t' 10 - NumCol", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintDouble",1128,G__BlueDict_242_0_104, 121, -1, -1, 0, 4, 1, 1, 8, 
"D - 'Double_t' 10 - TryDou i - 'Int_t' 10 - NumRow "
"i - 'Int_t' 10 - NumCol u 'TString' - 10 - ForVal", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListEst",1237,G__BlueDict_242_0_105, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListUnc",1231,G__BlueDict_242_0_106, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintNamEst",1109,G__BlueDict_242_0_107, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintNamUnc",1103,G__BlueDict_242_0_108, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEst",825,G__BlueDict_242_0_109, 121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintEst",825,G__BlueDict_242_0_110, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCofRelUnc",1390,G__BlueDict_242_0_111, 121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCofRelUnc",1390,G__BlueDict_242_0_112, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCor",817,G__BlueDict_242_0_113, 121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCor",817,G__BlueDict_242_0_114, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCov",821,G__BlueDict_242_0_115, 121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCov",821,G__BlueDict_242_0_116, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCovInvert",1453,G__BlueDict_242_0_117, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRho",822,G__BlueDict_242_0_118, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCompatEst",1437,G__BlueDict_242_0_119, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 10 - FilNam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCompatEst",1437,G__BlueDict_242_0_120, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParams",1137,G__BlueDict_242_0_121, 121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - Ifl", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintParams",1137,G__BlueDict_242_0_122, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPull",938,G__BlueDict_242_0_123, 121, -1, -1, 0, 1, 1, 1, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintPull",938,G__BlueDict_242_0_124, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintListObs",1229,G__BlueDict_242_0_125, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintNamObs",1101,G__BlueDict_242_0_126, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCovRes",1119,G__BlueDict_242_0_127, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintRhoRes",1120,G__BlueDict_242_0_128, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintWeight",1141,G__BlueDict_242_0_129, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintResult",1164,G__BlueDict_242_0_130, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintCompatObs",1429,G__BlueDict_242_0_131, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintChiPro",1106,G__BlueDict_242_0_132, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintInspectLike",1640,G__BlueDict_242_0_133, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintAccImp",1082,G__BlueDict_242_0_134, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintScaRho",1101,G__BlueDict_242_0_135, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 10 - FilNam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintScaRho",1101,G__BlueDict_242_0_136, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintInfWei",1103,G__BlueDict_242_0_137, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintMaxVar",1116,G__BlueDict_242_0_138, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PrintStatus",1169,G__BlueDict_242_0_139, 121, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetPara",676,G__BlueDict_242_0_140, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - ifl d - 'Double_t' 10 - rho "
"d - 'Double_t' 10 - zva", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FunPara",685,G__BlueDict_242_0_141, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 1, 8, 
"D - 'Double_t' 10 - x D - 'Double_t' 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InspectPair",1122,G__BlueDict_242_0_142, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InspectPair",1122,G__BlueDict_242_0_143, 121, -1, -1, 0, 3, 1, 1, 8, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j "
"u 'TString' - 10 - FilNam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InspectPair",1122,G__BlueDict_242_0_144, 121, -1, -1, 0, 4, 1, 1, 8, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j "
"u 'TString' - 10 - FilNam i - 'Int_t' 10 - IndFig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSens",807,G__BlueDict_242_0_145, 121, -1, -1, 0, 6, 1, 1, 8, 
"d - 'Double_t' 10 - xv1 d - 'Double_t' 10 - xv2 "
"d - 'Double_t' 10 - sv1 d - 'Double_t' 10 - sv2 "
"d - 'Double_t' 10 - rho u 'TString' - 10 - FilNam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DrawSens",807,G__BlueDict_242_0_146, 121, -1, -1, 0, 7, 1, 1, 8, 
"d - 'Double_t' 10 - xv1 d - 'Double_t' 10 - xv2 "
"d - 'Double_t' 10 - sv1 d - 'Double_t' 10 - sv2 "
"d - 'Double_t' 10 - rho u 'TString' - 10 - FilNam "
"i - 'Int_t' 10 - IndFig", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InspectLike",1115,G__BlueDict_242_0_147, 121, -1, -1, 0, 1, 1, 1, 0, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InspectLike",1115,G__BlueDict_242_0_148, 121, -1, -1, 0, 2, 1, 1, 0, 
"i - 'Int_t' 10 - n u 'TString' - 0 - FilNam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("InspectResult",1365,G__BlueDict_242_0_149, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LatexResult",1149,G__BlueDict_242_0_150, 121, -1, -1, 0, 1, 1, 1, 8, "u 'TString' - 10 - FilNam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("LatexResult",1149,G__BlueDict_242_0_151, 121, -1, -1, 0, 6, 1, 1, 8, 
"u 'TString' - 10 - FilNam u 'TString' - 10 - ForVal "
"u 'TString' - 10 - ForUnc u 'TString' - 10 - ForWei "
"u 'TString' - 10 - ForRho u 'TString' - 10 - ForPul", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayResult",1365,G__BlueDict_242_0_152, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - n u 'TString' - 10 - FilNam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayResult",1365,G__BlueDict_242_0_153, 121, -1, -1, 0, 4, 1, 1, 8, 
"i - 'Int_t' 10 - n u 'TString' - 10 - FilNam "
"u 'TString' - 10 - ForVal u 'TString' - 10 - ForUnc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayAccImp",1283,G__BlueDict_242_0_154, 121, -1, -1, 0, 2, 1, 1, 8, 
"i - 'Int_t' 10 - n u 'TString' - 10 - FilNam", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DisplayAccImp",1283,G__BlueDict_242_0_155, 121, -1, -1, 0, 4, 1, 1, 8, 
"i - 'Int_t' 10 - n u 'TString' - 10 - FilNam "
"u 'TString' - 10 - ForVal u 'TString' - 10 - ForUnc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Construct",965,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 5, 1, 4, 0, 
"i - 'Int_t' 10 - NumEst i - 'Int_t' 10 - NumUnc "
"i - 'Int_t' 10 - NumObs I - 'Int_t' 10 - IntObs "
"I - 'Int_t' 10 - IntFac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetupRoot",949,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SolveScaRho",1097,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 0, 
"i - 'Int_t' 10 - RhoFla U 'TMatrixT<double>' 'TMatrixD' 10 - MinFac "
"U 'TMatrixT<double>' 'TMatrixD' 10 - MaxFac", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsSolved",1109,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsSolvedRelUnc",1694,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsSolvedAccImp",1666,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsSolvedScaRho",1685,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsSolvedInfWei",1687,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsSolvedPosWei",1708,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsSolvedMaxVar",1700,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetIsInspectLike",1603,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillCov",687,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillCovInvert",1319,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillSig",682,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("FillRho",688,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAllowedEst",1200,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActiveEst",1092,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFilledEst",1080,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFilledEst",1080,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWhichEst",987,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - ia", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIndexEst",992,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("EstWhichObs",1091,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAllowedUnc",1194,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActiveUnc",1086,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFilledUnc",1074,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFilledUnc",1074,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAllowedFac",1166,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRhoValUnc",1070,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRhoFacUnc",1045,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRhoRedUnc",1062,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRelValUnc",1064,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWhichUnc",981,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - ka", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIndexUnc",986,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsAllowedObs",1192,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsActiveObs",1084,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWhichObs",979,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - na", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsIndexObs",984,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "i - 'Int_t' 10 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFilledNamEst",1364,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFilledNamUnc",1358,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFilledNamObs",1356,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFilledInp",1075,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFixedInp",979,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsCalcedParams",1372,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSolved",809,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSolvedRelUnc",1394,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSolvedAccImp",1366,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSolvedScaRho",1385,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSolvedInfWei",1387,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSolvedPosWei",1408,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSolvedMaxVar",1400,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsSolvedAnyWay",1410,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsInspectedLike",1504,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsRelValUnc",1064,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsPrintLevel",1217,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsQuiet",708,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsFutchCor",986,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 4, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("GetMatEigen",1066,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "U 'TMatrixT<double>' 'TMatrixD' 10 - TryMat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActiveEst",1204,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilledEst",1192,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - i", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilledEst",1192,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetActiveUnc",1198,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilledUnc",1186,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilledUnc",1186,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoValUnc",1182,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - 'Int_t' 10 - k i - 'Int_t' 10 - l "
"d - 'Double_t' 10 - RhoVal i - 'Int_t' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoFacUnc",1157,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - 'Int_t' 10 - k i - 'Int_t' 10 - l "
"d - 'Double_t' 10 - RhoFac i - 'Int_t' 10 - m", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRhoRedUnc",1174,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetRelValUnc",1176,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFilledInp",1187,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFixedInp",1091,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetQuiet",820,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetCalcedParams",1484,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - l", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("SetFutchCor",1098,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 0, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j "
"i - 'Int_t' 10 - l d - 'Double_t' 10 - RhoFut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcRelUnc",956,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 8, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - k "
"d - 'Double_t' 10 - ValCom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Likelihood",1028,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 8, 
"D - 'Double_t' 10 - x D - 'Double_t' 10 - par", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcChiRes",945,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 3, 1, 4, 8, 
"i - 'Int_t' 10 - n i - 'Int_t' 10 - IsLike "
"d - 'Double_t' 10 - xt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcParams",983,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("ResetScaRho",1091,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "i - 'Int_t' 10 - IFlag", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcActFac",917,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 3, 1, 4, 0, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j "
"i - 'Int_t' 10 - k", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("CalcFutchCor",1169,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 2, 1, 4, 0, 
"i - 'Int_t' 10 - i i - 'Int_t' 10 - j", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("IsWhichMatrix",1316,(G__InterfaceMethod) NULL, 105, -1, G__defined_typename("Int_t"), 0, 1, 1, 4, 8, "U 'TMatrixT<double>' 'TMatrixD' 10 - TryMat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("MatrixtoDouble",1459,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 8, 
"U 'TMatrixT<double>' 'TMatrixD' 10 - InpMat D - 'Double_t' 0 - OutDou", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("WriteInput",1051,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 8, 
"i - 'Int_t' 10 - IWhat u 'TString' - 10 - FilNam "
"u 'TString' - 10 - ForVal u 'TString' - 10 - ForRho", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("PlotRes",713,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 4, 1, 4, 8, 
"i - 'Int_t' 10 - N u 'TString' - 10 - FilNam "
"u 'TString' - 10 - ForVal u 'TString' - 10 - ForUnc", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__BlueDict_242_0_239, 85, G__get_linked_tagnum(&G__BlueDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&Blue::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__BlueDict_242_0_240, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Blue::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__BlueDict_242_0_241, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&Blue::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__BlueDict_242_0_242, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&Blue::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__BlueDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - insp", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__BlueDict_242_0_246, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__BlueDict_242_0_247, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Blue::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__BlueDict_242_0_248, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Blue::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__BlueDict_242_0_249, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&Blue::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__BlueDict_242_0_250, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&Blue::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("Blue", 392, G__BlueDict_242_0_251, (int) ('i'), G__get_linked_tagnum(&G__BlueDictLN_Blue), -1, 0, 1, 1, 1, 0, "u 'Blue' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~Blue", 518, G__BlueDict_242_0_252, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__BlueDict_242_0_253, (int) ('u'), G__get_linked_tagnum(&G__BlueDictLN_Blue), -1, 1, 1, 1, 1, 0, "u 'Blue' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncBlueDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalBlueDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcBlueDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__BlueDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TString = { "TString" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TElementActionTlEdoublegR = { "TElementActionT<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TElementPosActionTlEdoublegR = { "TElementPosActionT<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTlEdoublegR = { "TMatrixT<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTSymlEdoublegR = { "TMatrixTSym<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTSparselEdoublegR = { "TMatrixTSparse<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTRow_constlEdoublegR = { "TMatrixTRow_const<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTRowlEdoublegR = { "TMatrixTRow<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTDiag_constlEdoublegR = { "TMatrixTDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTColumn_constlEdoublegR = { "TMatrixTColumn_const<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTFlat_constlEdoublegR = { "TMatrixTFlat_const<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTSub_constlEdoublegR = { "TMatrixTSub_const<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTSparseRow_constlEdoublegR = { "TMatrixTSparseRow_const<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTSparseDiag_constlEdoublegR = { "TMatrixTSparseDiag_const<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTColumnlEdoublegR = { "TMatrixTColumn<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTDiaglEdoublegR = { "TMatrixTDiag<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTFlatlEdoublegR = { "TMatrixTFlat<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTSublEdoublegR = { "TMatrixTSub<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTSparseRowlEdoublegR = { "TMatrixTSparseRow<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TMatrixTSparseDiaglEdoublegR = { "TMatrixTSparseDiag<double>" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_TDatime = { "TDatime" , 99 , -1 };
G__linked_taginfo G__BlueDictLN_Blue = { "Blue" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtableBlueDict() {
  G__BlueDictLN_TClass.tagnum = -1 ;
  G__BlueDictLN_TBuffer.tagnum = -1 ;
  G__BlueDictLN_TMemberInspector.tagnum = -1 ;
  G__BlueDictLN_TObject.tagnum = -1 ;
  G__BlueDictLN_TString.tagnum = -1 ;
  G__BlueDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__BlueDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BlueDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__BlueDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__BlueDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TElementActionTlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TElementPosActionTlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTSymlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTSparselEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTRow_constlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTRowlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTDiag_constlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTColumn_constlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTFlat_constlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTSub_constlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTSparseRow_constlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTSparseDiag_constlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTColumnlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTDiaglEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTFlatlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTSublEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTSparseRowlEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TMatrixTSparseDiaglEdoublegR.tagnum = -1 ;
  G__BlueDictLN_TDatime.tagnum = -1 ;
  G__BlueDictLN_Blue.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtableBlueDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TString);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TElementActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TElementPosActionTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTSymlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTSparselEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTColumn_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTFlat_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTSub_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTSparseRow_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTSparseDiag_constlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTColumnlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTFlatlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTSublEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTSparseRowlEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TMatrixTSparseDiaglEdoublegR);
   G__get_linked_tagnum_fwd(&G__BlueDictLN_TDatime);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__BlueDictLN_Blue),sizeof(Blue),-1,62464,(char*)NULL,G__setup_memvarBlue,G__setup_memfuncBlue);
}
extern "C" void G__cpp_setupBlueDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupBlueDict()");
  G__set_cpp_environmentBlueDict();
  G__cpp_setup_tagtableBlueDict();

  G__cpp_setup_inheritanceBlueDict();

  G__cpp_setup_typetableBlueDict();

  G__cpp_setup_memvarBlueDict();

  G__cpp_setup_memfuncBlueDict();
  G__cpp_setup_globalBlueDict();
  G__cpp_setup_funcBlueDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncBlueDict();
  return;
}
class G__cpp_setup_initBlueDict {
  public:
    G__cpp_setup_initBlueDict() { G__add_setup_func("BlueDict",(G__incsetup)(&G__cpp_setupBlueDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initBlueDict() { G__remove_setup_func("BlueDict"); }
};
G__cpp_setup_initBlueDict G__cpp_setup_initializerBlueDict;

