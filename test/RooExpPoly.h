/* -*- mode: c++ -*- *********************************************************
 * Project: RooFit                                                           *
 *                                                                           *
 * This code was autogenerated by RooClassFactory                            * 
 *****************************************************************************/

#ifndef ROOEXPPOLY
#define ROOEXPPOLY

#include "RooAbsPdf.h"
#include "RooRealProxy.h"
#include "RooArgList.h"
#include "RooAbsReal.h"
#include "RooListProxy.h"
#include "RooComplex.h"
 
class RooExpPoly : public RooAbsPdf {
public:
  RooExpPoly() {} ; 
  RooExpPoly(const char *name, const char *title,
	      RooAbsReal& _x,
	      RooArgList& _coefs);
  RooExpPoly(const RooExpPoly& other, const char* name=0) ;
  virtual TObject* clone(const char* newname) const { return new RooExpPoly(*this,newname); }
  inline virtual ~RooExpPoly() { }

  Int_t getAnalyticalIntegral(RooArgSet& allVars, RooArgSet& analVars, 
			      const char *rangeName = 0) const;
  Double_t analyticalIntegral(Int_t code, const char *rangeName = 0) const;

  static RooComplex erfi(RooComplex xval);
protected:

  RooRealProxy x ;
  RooListProxy coefs ;
  
  Double_t evaluate() const ;

private:

  ClassDef(RooExpPoly,1) // Your description goes here...
};
 
#endif
